{"version":3,"file":"static/js/231.66dd6b4a.chunk.js","mappings":"sOAEaA,E,OAAaC,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iD,SCiCnC,EA9BiB,WAEf,IAAAC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAkB9B,OAhBAG,EAAAA,EAAAA,YAAU,WAKRD,GAAa,IACbE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJR,EAAUQ,EACZ,IACCC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAChB,IACCE,SAAQ,kBAAMR,GAAa,EAAM,GAXtC,GAAG,KAeDS,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACGZ,GAAa,4BACda,EAAAA,EAAAA,KAACzB,EAAU,CAAAwB,SAAC,oBACZC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAAClB,OAAQA,MAGxB,C,uGC9BamB,EAAO1B,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yDAMhByB,GAAU3B,EAAAA,EAAAA,IAAO4B,EAAAA,GAAP5B,CAAY6B,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,iDAKtB4B,EAAU9B,EAAAA,GAAAA,GAAS+B,IAAAA,GAAA7B,EAAAA,EAAAA,GAAA,kdAkBnB8B,EAAOhC,EAAAA,GAAAA,EAAQiC,IAAAA,GAAA/B,EAAAA,EAAAA,GAAA,oEAMfgC,EAASlC,EAAAA,GAAAA,IAAUmC,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,4C,SCVhC,EAzBiB,SAAHkC,GAAoB,IAAd7B,EAAM6B,EAAN7B,OACZ8B,GAAWC,EAAAA,EAAAA,MAGjB,OACEd,EAAAA,EAAAA,KAACM,EAAO,CAAAP,SACLhB,EAAOgC,KAAI,SAAAC,GAAK,OACfhB,EAAAA,EAAAA,KAACE,EAAI,CAAAH,UACHF,EAAAA,EAAAA,MAACM,EAAO,CAACc,GAAE,WAAAC,OAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMR,GAAWd,SAAA,EAC5DC,EAAAA,EAAAA,KAACU,EAAM,CACLY,IACEN,EAAMO,YAAW,kCAAAL,OACqBF,EAAMO,aATxD,8EAYUC,MAAO,IACPC,IAAI,YAENzB,EAAAA,EAAAA,KAACQ,EAAI,CAAAT,SAAEiB,EAAMU,YAXNV,EAAMG,GAaV,KAIf,C","sources":["components/Home/home.styled.jsx","components/Home/home.jsx","components/MovieList/movielist.styled.jsx","components/MovieList/movielist.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const HomeStyled = styled.h1`\ncolor: #dc2c2c;\nletter-spacing: 5px;\n`;","import { useEffect, useState } from 'react';\nimport MoveList from 'components/MovieList/movielist';\nimport { fetchTrending } from 'api';\nimport { HomeStyled } from './home.styled';\n\nconst HomePage = () => {\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getTrendingMovies();\n  }, []);\n\n  function getTrendingMovies() {\n    setIsLoading(true);\n    fetchTrending()\n      .then(response => {\n        setMovies(response)\n      })\n      .catch(error => {\n        console.error(error);\n      })\n      .finally(() => setIsLoading(false))\n  }\n\n  return (\n    <>\n      {isLoading && \"Loading , please wait...\"}\n      <HomeStyled>Trending today</HomeStyled>\n      <MoveList movies={movies}/>\n    </>\n  );\n};\n\nexport default HomePage;","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n&:hover, &:focus {\n    font-weight: 1200;\n}\n`;\n\nexport const MovLink = styled(Link)`\ncolor: black;\ntext-decoration: none;\n`;\n\nexport const MovList = styled.ul`\n  list-style-type: none;\n  display: grid;\n  max-width: calc(100vw - 65px);\n  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\n  grid-gap: 15px;\n  margin-top: 50px;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n    grid-gap: 40px;\n  }\n`;\nexport const MovP = styled.p`\n  font-size: 16px;\n  font-weight: 700;\n  color: black;\n`;\n\nexport const MovImg = styled.img`\n  display: flex;\n  width: 100%;\n`;","import { useLocation } from 'react-router-dom';\nimport { MovLink, Item, MovList, MovImg, MovP } from './movielist.styled';\n\nconst MoveList = ({ movies }) => {\n  const location = useLocation();\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  return (\n    <MovList>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <MovLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            <MovImg\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : defaultImg\n              }\n              width={250}\n              alt=\"poster\"\n            />\n            <MovP>{movie.title}</MovP>\n          </MovLink>\n        </Item>\n      ))}\n    </MovList>\n  );\n};\nexport default MoveList;"],"names":["HomeStyled","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchTrending","then","response","catch","error","console","finally","_jsxs","_Fragment","children","_jsx","MoveList","Item","MovLink","Link","_templateObject2","MovList","_templateObject3","MovP","_templateObject4","MovImg","_templateObject5","_ref","location","useLocation","map","movie","to","concat","id","state","from","src","poster_path","width","alt","title"],"sourceRoot":""}