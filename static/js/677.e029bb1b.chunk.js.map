{"version":3,"file":"static/js/677.e029bb1b.chunk.js","mappings":"iNAGaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yDAMhBC,GAAUH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,iD,SCNtBI,EAAY,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACpBC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAA,MAAAC,SACGJ,EAAOK,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAKF,EAALE,MAAK,OACtBL,EAAAA,EAAAA,KAACZ,EAAI,CAAAa,UACHD,EAAAA,EAAAA,KAACR,EAAO,CAACc,GAAE,WAAAC,OAAaH,GAAMI,MAAO,CAAEC,KAAMX,GAAWG,UACtDD,EAAAA,EAAAA,KAAA,KAAAC,SAAII,OAFGD,EAIJ,KAIf,C,2ICdaM,EAASrB,EAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yGAetBoB,GANOtB,EAAAA,GAAAA,KAAWK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,qFAMVF,EAAAA,GAAAA,MAAYuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,2D,SCYjC,EA1B2B,WAE3B,IAAAsB,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAC9BI,EAAcF,EAAaG,IAAI,eAQjC,OACEpB,EAAAA,EAAAA,KAAAqB,EAAAA,SAAA,CAAApB,UACAqB,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,SARS,SAAAC,GACnBA,EAAEC,iBACFR,EAAgB,CAAES,YAAaF,EAAEG,OAAOC,SAASF,YAAYG,QAC7DL,EAAEM,cAAcC,OAClB,EAImC/B,SAAA,EAC3BD,EAAAA,EAAAA,KAACW,EAAK,CACNsB,KAAK,OACLC,KAAK,cACLC,WAAS,EACTC,aAAcjB,KAEdnB,EAAAA,EAAAA,KAACU,EAAM,CAACuB,KAAK,SAAQhC,SAAC,eAI5B,ECKF,EA1BwB,WAEtB,IAAAoC,GAA8C7B,EAAAA,EAAAA,UAAM,IAAG8B,GAAAtB,EAAAA,EAAAA,GAAAqB,EAAA,GAAhDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAA6BC,EAAAA,EAAAA,MACvBC,GADyC3B,EAAAA,EAAAA,GAAAyB,EAAA,GAAtB,GACcrB,IAAI,eAczC,OAZFwB,EAAAA,EAAAA,YAAO,WACAD,IACLE,EAAAA,EAAAA,IAAiBF,GACdG,MAAK,SAAAC,GACJP,EAAmBO,EACrB,IACCC,OAAM,SAAAC,GACLC,MAAM,aACNC,QAAQF,MAAMA,EAChB,GACJ,GAAG,CAACN,KAGArB,EAAAA,EAAAA,MAAAD,EAAAA,SAAA,CAAApB,SAAA,EACAD,EAAAA,EAAAA,KAACoD,EAAW,KACZpD,EAAAA,EAAAA,KAACL,EAAAA,EAAS,CAACE,OAAQ0C,MAGvB,C","sources":["components/MovieList/movielist.styled.jsx","components/MovieList/movielist.jsx","components/MovieSearchBar/moviesearchbar.styled.jsx","components/MovieSearchBar/moviesearchbar.jsx","components/Movies/movies.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n&:hover, &:focus {\n    font-weight: 1200;\n}\n`;\n\nexport const MovLink = styled(Link)`\ncolor: black;\ntext-decoration: none;\n`;","import { useLocation } from 'react-router-dom';\nimport { MovLink, Item } from './movielist.styled';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <Item key={id}>\n          <MovLink to={`/movies/${id}`} state={{ from: location }}>\n            <p>{title}</p>\n          </MovLink>\n        </Item>\n      ))}\n    </ul>\n  );\n};","import styled from \"styled-components\";\n\nexport const Button = styled.button`\nborder-radius: 50%;\nheight: 40px;\nwidth: 40px;\n&:hover, &:focus {\n    cursor: pointer;\n}\n`;\n\nexport const Form = styled.form`\nmargin-left: auto;\nmargin-right: auto;\nmargin-top: 50px;\nwidth: 400px;\n`\nexport const Input = styled.input`\nheight: 45px;\nmargin-right: 15px;\nwidth: 400px`;","import { Form, useSearchParams } from \"react-router-dom\";\nimport { Button, Input } from \"./moviesearchbar.styled\";\n\nexport const MovieSearch = () => {\n\nconst [searchParams, setSearchParams] = useSearchParams();\nconst searchMovie = searchParams.get('searchQuery');\n\nconst handleSubmit = e => {\n  e.preventDefault();\n  setSearchParams({ searchQuery: e.target.elements.searchQuery.value });\n  e.currentTarget.reset();\n}\n\n    return (\n      <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n        type=\"text\"\n        name=\"searchQuery\"\n        autoFocus\n        defaultValue={searchMovie}\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      </>\n    );\n  };\n\nexport default MovieSearch;","import { useEffect as effect, useState as state } from \"react\";\nimport { useSearchParams as searchParamsHook } from \"react-router-dom\";\nimport { fetchDataByQuery } from \"api\";\nimport { MovieList } from \"components/MovieList/movielist\";\nimport MovieSearch from \"components/MovieSearchBar/moviesearchbar\";\n\nconst MoviesComponent = () => {\n\n  const [customMovieList, setCustomMovieList] = state([]);\n  const [customSearchParams] = searchParamsHook(); \n  const customQuery = customSearchParams.get('searchQuery');\n\n  effect(() => {\n    if (!customQuery) return;\n    fetchDataByQuery(customQuery)\n      .then(response => {\n        setCustomMovieList(response);\n      })\n      .catch(error => {\n        alert('Try later');\n        console.error(error);\n      });\n  }, [customQuery]);\n\n    return (\n      <>\n      <MovieSearch/>\n      <MovieList movies={customMovieList}/>\n      </>\n    );\n  };\n\nexport default MoviesComponent;"],"names":["Item","styled","_templateObject","_taggedTemplateLiteral","MovLink","Link","_templateObject2","MovieList","_ref","movies","location","useLocation","_jsx","children","map","_ref2","id","title","to","concat","state","from","Button","Input","_templateObject3","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","searchMovie","get","_Fragment","_jsxs","Form","onSubmit","e","preventDefault","searchQuery","target","elements","value","currentTarget","reset","type","name","autoFocus","defaultValue","_state","_state2","customMovieList","setCustomMovieList","_searchParamsHook","searchParamsHook","customQuery","effect","fetchDataByQuery","then","response","catch","error","alert","console","MovieSearch"],"sourceRoot":""}